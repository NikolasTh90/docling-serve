FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Section 1: OCR Setup
# Install system dependencies required by build_tesseract.sh
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    libtool \
    autoconf \
    automake \
    libpng-dev \
    libjpeg-dev \
    libtiff-dev \
    libgif-dev \
    libwebp-dev \
    libopenjp2-7-dev \
    zlib1g-dev \
    liblcms2-dev \
    libicu-dev \
    libpango1.0-dev \
    libcairo2-dev \
    curl \
    wget \
    sudo \
    unpaper \
    ghostscript \
    vim autotools-dev automake libtool libleptonica-dev pkg-config \
    pngquant \
    python3 \
    python3-pip

# Copy build script and make it executable
COPY build_tesseract.sh /usr/local/bin/build_tesseract.sh
RUN chmod +x /usr/local/bin/build_tesseract.sh

# Build and install Tesseract with Arabic and Greek language support
RUN echo y | /usr/local/bin/build_tesseract.sh -v 5.5.1 -l eng,ara,ell --jobs 12

# Install jbig2 encoder
RUN export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH \
    && git clone https://github.com/agl/jbig2enc.git \
    && cd jbig2enc \
    && ./autogen.sh \
    && ./configure \
    && make -j12 \
    && make install \
    && cd .. \
    && rm -rf jbig2enc
# Install UV package manager for faster dependency resolution
RUN pip install --upgrade setuptools[core]
RUN pip install uv

# Set Tesseract data path
ENV TESSDATA_PREFIX="/usr/local/share/tessdata/"

# Expose port
EXPOSE 5001

# # Section 2: Ollama Setup
# RUN curl -fsSL https://ollama.com/install.sh | sh
# ENV OLLAMA_HOST=0.0.0.0:11434
# ENV OLLAMA_MODELS=/workspace/models
# EXPOSE 11434

# OPTIMIZATION: First copy only pyproject.toml and install dependencies
COPY pyproject.toml /app/
RUN uv sync --extra ui

# Now copy the rest of the application code
COPY . /app